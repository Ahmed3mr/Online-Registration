// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineRegisteration.Server;

#nullable disable

namespace OnlineRegistration.Server.Migrations
{
    [DbContext(typeof(RegistrationDBContext))]
    [Migration("20221205170638_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Registeration.Shared.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Registeration.Shared.Models.Classroom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("LecturerId")
                        .HasColumnType("int");

                    b.Property<int>("SlotName")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseID");

                    b.HasIndex("LecturerId");

                    b.ToTable("Classrooms");
                });

            modelBuilder.Entity("Registeration.Shared.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<int?>("CourseDependenceId")
                        .HasColumnType("int");

                    b.Property<int>("CreditHours")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TheDepartmentId")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.HasIndex("CourseDependenceId");

                    b.HasIndex("TheDepartmentId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Registeration.Shared.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Registeration.Shared.Models.Lecturer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Lecturers");
                });

            modelBuilder.Entity("Registeration.Shared.Models.RegPeriod", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TheAdminId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TheAdminId");

                    b.ToTable("RegPeriods");
                });

            modelBuilder.Entity("Registeration.Shared.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassroomId")
                        .HasColumnType("int");

                    b.Property<int>("RegPeriodId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.HasIndex("RegPeriodId");

                    b.HasIndex("StudentId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("Registeration.Shared.Models.Student", b =>
                {
                    b.Property<int>("RegId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegId"));

                    b.Property<int>("CreditHours")
                        .HasColumnType("int");

                    b.Property<float>("GPA")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TheDepartmentId")
                        .HasColumnType("int");

                    b.HasKey("RegId");

                    b.HasIndex("TheDepartmentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Registeration.Shared.Models.Classroom", b =>
                {
                    b.HasOne("Registeration.Shared.Models.Course", "TheCourse")
                        .WithMany()
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Registeration.Shared.Models.Lecturer", "TheLecturer")
                        .WithMany("TheClassrooms")
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TheCourse");

                    b.Navigation("TheLecturer");
                });

            modelBuilder.Entity("Registeration.Shared.Models.Course", b =>
                {
                    b.HasOne("Registeration.Shared.Models.Course", "DependantCourse")
                        .WithMany()
                        .HasForeignKey("CourseDependenceId");

                    b.HasOne("Registeration.Shared.Models.Department", "TheDepartment")
                        .WithMany("TheCourses")
                        .HasForeignKey("TheDepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DependantCourse");

                    b.Navigation("TheDepartment");
                });

            modelBuilder.Entity("Registeration.Shared.Models.RegPeriod", b =>
                {
                    b.HasOne("Registeration.Shared.Models.Admin", "TheAdmin")
                        .WithMany("TheRegPeriods")
                        .HasForeignKey("TheAdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TheAdmin");
                });

            modelBuilder.Entity("Registeration.Shared.Models.Schedule", b =>
                {
                    b.HasOne("Registeration.Shared.Models.Classroom", "theClassroom")
                        .WithMany("TheSchedules")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Registeration.Shared.Models.RegPeriod", "RegPeriod")
                        .WithMany("TheSchedules")
                        .HasForeignKey("RegPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Registeration.Shared.Models.Student", "TheStudent")
                        .WithMany("TheSchedules")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegPeriod");

                    b.Navigation("TheStudent");

                    b.Navigation("theClassroom");
                });

            modelBuilder.Entity("Registeration.Shared.Models.Student", b =>
                {
                    b.HasOne("Registeration.Shared.Models.Department", "TheDepartment")
                        .WithMany("TheStudents")
                        .HasForeignKey("TheDepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TheDepartment");
                });

            modelBuilder.Entity("Registeration.Shared.Models.Admin", b =>
                {
                    b.Navigation("TheRegPeriods");
                });

            modelBuilder.Entity("Registeration.Shared.Models.Classroom", b =>
                {
                    b.Navigation("TheSchedules");
                });

            modelBuilder.Entity("Registeration.Shared.Models.Department", b =>
                {
                    b.Navigation("TheCourses");

                    b.Navigation("TheStudents");
                });

            modelBuilder.Entity("Registeration.Shared.Models.Lecturer", b =>
                {
                    b.Navigation("TheClassrooms");
                });

            modelBuilder.Entity("Registeration.Shared.Models.RegPeriod", b =>
                {
                    b.Navigation("TheSchedules");
                });

            modelBuilder.Entity("Registeration.Shared.Models.Student", b =>
                {
                    b.Navigation("TheSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
